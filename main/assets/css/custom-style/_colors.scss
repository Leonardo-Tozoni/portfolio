// --------------------------------

// (START) Global editor code https://codyhouse.co/ds/globals/colors

// --------------------------------

:root, [data-theme="default"] {
  // main
  @include defineColorHSL(--color-primary-darker, 0, 0%, 0%);
  @include defineColorHSL(--color-primary-dark, 0, 0%, 8%);
  @include defineColorHSL(--color-primary, 0, 0%, 15%);
  @include defineColorHSL(--color-primary-light, 0, 0%, 21%);
  @include defineColorHSL(--color-primary-lighter, 0, 0%, 27%);

  @include defineColorHSL(--color-accent-darker, 227, 39%, 36%);
  @include defineColorHSL(--color-accent-dark, 227, 39%, 42%);
  @include defineColorHSL(--color-accent, 227, 39%, 48%);
  @include defineColorHSL(--color-accent-light, 227, 39%, 54%);
  @include defineColorHSL(--color-accent-lighter, 227, 39%, 60%);

  @include defineColorHSL(--color-black, 230, 13%, 9%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 35, 79%, 48%);
  @include defineColorHSL(--color-warning-dark, 35, 79%, 56%);
  @include defineColorHSL(--color-warning, 35, 79%, 66%);
  @include defineColorHSL(--color-warning-light, 35, 79%, 74%);
  @include defineColorHSL(--color-warning-lighter, 35, 79%, 82%);

  @include defineColorHSL(--color-success-darker, 170, 78%, 26%);
  @include defineColorHSL(--color-success-dark, 170, 78%, 31%);
  @include defineColorHSL(--color-success, 170, 78%, 36%);
  @include defineColorHSL(--color-success-light, 170, 78%, 42%);
  @include defineColorHSL(--color-success-lighter, 170, 78%, 47%);

  @include defineColorHSL(--color-error-darker, 342, 89%, 38%);
  @include defineColorHSL(--color-error-dark, 342, 89%, 43%);
  @include defineColorHSL(--color-error, 342, 89%, 48%);
  @include defineColorHSL(--color-error-light, 342, 89%, 56%);
  @include defineColorHSL(--color-error-lighter, 342, 89%, 62%);

  // background
  @include defineColorHSL(--color-bg-darker, 240, 4%, 90%);
  @include defineColorHSL(--color-bg-dark, 240, 4%, 95%);
  @include defineColorHSL(--color-bg, 0, 0%, 100%);
  @include defineColorHSL(--color-bg-light, 0, 0%, 100%);
  @include defineColorHSL(--color-bg-lighter, 0, 0%, 100%);

  // color contrasts
  @include defineColorHSL(--color-contrast-lower, 240, 4%, 85%);
  @include defineColorHSL(--color-contrast-low, 240, 4%, 65%);
  @include defineColorHSL(--color-contrast-medium, 225, 4%, 47%);
  @include defineColorHSL(--color-contrast-high, 230, 7%, 23%);
  @include defineColorHSL(--color-contrast-higher, 230, 13%, 9%);
}

[data-theme="dark"] {
  // main
  @include defineColorHSL(--color-primary-darker, 250, 100%, 60%);
  @include defineColorHSL(--color-primary-dark, 250, 100%, 64%);
  @include defineColorHSL(--color-primary, 250, 100%, 69%);
  @include defineColorHSL(--color-primary-light, 250, 100%, 72%);
  @include defineColorHSL(--color-primary-lighter, 250, 100%, 76%);

  @include defineColorHSL(--color-accent-darker, 342, 92%, 41%);
  @include defineColorHSL(--color-accent-dark, 342, 92%, 47%);
  @include defineColorHSL(--color-accent, 342, 92%, 54%);
  @include defineColorHSL(--color-accent-light, 342, 92%, 60%);
  @include defineColorHSL(--color-accent-lighter, 342, 92%, 65%);

  @include defineColorHSL(--color-black, 230, 13%, 9%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 35, 79%, 48%);
  @include defineColorHSL(--color-warning-dark, 35, 79%, 56%);
  @include defineColorHSL(--color-warning, 35, 79%, 66%);
  @include defineColorHSL(--color-warning-light, 35, 79%, 74%);
  @include defineColorHSL(--color-warning-lighter, 35, 79%, 82%);

  @include defineColorHSL(--color-success-darker, 170, 78%, 26%);
  @include defineColorHSL(--color-success-dark, 170, 78%, 31%);
  @include defineColorHSL(--color-success, 170, 78%, 36%);
  @include defineColorHSL(--color-success-light, 170, 78%, 42%);
  @include defineColorHSL(--color-success-lighter, 170, 78%, 47%);

  @include defineColorHSL(--color-error-darker, 342, 92%, 41%);
  @include defineColorHSL(--color-error-dark, 342, 92%, 47%);
  @include defineColorHSL(--color-error, 342, 92%, 54%);
  @include defineColorHSL(--color-error-light, 342, 92%, 60%);
  @include defineColorHSL(--color-error-lighter, 342, 92%, 65%);

  // background
  @include defineColorHSL(--color-bg-darker, 232, 7%, 8%);
  @include defineColorHSL(--color-bg-dark, 233, 8%, 11%);
  @include defineColorHSL(--color-bg, 232, 11%, 15%);
  @include defineColorHSL(--color-bg-light, 233, 8%, 19%);
  @include defineColorHSL(--color-bg-lighter, 232, 7%, 22%);

  // color contrasts
  @include defineColorHSL(--color-contrast-lower, 240, 6%, 26%);
  @include defineColorHSL(--color-contrast-low, 240, 3%, 41%);
  @include defineColorHSL(--color-contrast-medium, 213, 3%, 57%);
  @include defineColorHSL(--color-contrast-high, 240, 5%, 82%);
  @include defineColorHSL(--color-contrast-higher, 240, 100%, 99%);
}

// background color
.bg-text-darker { background-color: alpha(var(--color-text-darker), var(--bg-o, 1)); }
.bg-text-dark { background-color: alpha(var(--color-text-dark), var(--bg-o, 1)); }
.bg-text { background-color: alpha(var(--color-text), var(--bg-o, 1)); }
.bg-text-light { background-color: alpha(var(--color-text-light), var(--bg-o, 1)); }
.bg-text-lighter { background-color: alpha(var(--color-text-lighter), var(--bg-o, 1)); }
.bg-grey-darker { background-color: alpha(var(--color-grey-darker), var(--bg-o, 1)); }
.bg-grey-dark { background-color: alpha(var(--color-grey-dark), var(--bg-o, 1)); }
.bg-grey { background-color: alpha(var(--color-grey), var(--bg-o, 1)); }
.bg-grey-light { background-color: alpha(var(--color-grey-light), var(--bg-o, 1)); }
.bg-grey-lighter { background-color: alpha(var(--color-grey-lighter), var(--bg-o, 1)); }
.bg-light-grey-darker { background-color: alpha(var(--color-light-grey-darker), var(--bg-o, 1)); }
.bg-light-grey-dark { background-color: alpha(var(--color-light-grey-dark), var(--bg-o, 1)); }
.bg-light-grey { background-color: alpha(var(--color-light-grey), var(--bg-o, 1)); }
.bg-light-grey-light { background-color: alpha(var(--color-light-grey-light), var(--bg-o, 1)); }
.bg-light-grey-lighter { background-color: alpha(var(--color-light-grey-lighter), var(--bg-o, 1)); }
.bg-dark-green-darker { background-color: alpha(var(--color-dark-green-darker), var(--bg-o, 1)); }
.bg-dark-green-dark { background-color: alpha(var(--color-dark-green-dark), var(--bg-o, 1)); }
.bg-dark-green { background-color: alpha(var(--color-dark-green), var(--bg-o, 1)); }
.bg-dark-green-light { background-color: alpha(var(--color-dark-green-light), var(--bg-o, 1)); }
.bg-dark-green-lighter { background-color: alpha(var(--color-dark-green-lighter), var(--bg-o, 1)); }
.bg-light-blue-darker { background-color: alpha(var(--color-light-blue-darker), var(--bg-o, 1)); }
.bg-light-blue-dark { background-color: alpha(var(--color-light-blue-dark), var(--bg-o, 1)); }
.bg-light-blue { background-color: alpha(var(--color-light-blue), var(--bg-o, 1)); }
.bg-light-blue-light { background-color: alpha(var(--color-light-blue-light), var(--bg-o, 1)); }
.bg-light-blue-lighter { background-color: alpha(var(--color-light-blue-lighter), var(--bg-o, 1)); }
.bg-light-primary-darker { background-color: alpha(var(--color-light-primary-darker), var(--bg-o, 1)); }
.bg-light-primary-dark { background-color: alpha(var(--color-light-primary-dark), var(--bg-o, 1)); }
.bg-light-primary { background-color: alpha(var(--color-light-primary), var(--bg-o, 1)); }
.bg-light-primary-light { background-color: alpha(var(--color-light-primary-light), var(--bg-o, 1)); }
.bg-light-primary-lighter { background-color: alpha(var(--color-light-primary-lighter), var(--bg-o, 1)); }
.bg-dark-blue-darker { background-color: alpha(var(--color-dark-blue-darker), var(--bg-o, 1)); }
.bg-dark-blue-dark { background-color: alpha(var(--color-dark-blue-dark), var(--bg-o, 1)); }
.bg-dark-blue { background-color: alpha(var(--color-dark-blue), var(--bg-o, 1)); }
.bg-dark-blue-light { background-color: alpha(var(--color-dark-blue-light), var(--bg-o, 1)); }
.bg-dark-blue-lighter { background-color: alpha(var(--color-dark-blue-lighter), var(--bg-o, 1)); }

// border color
.border-text-darker { border-color: alpha(var(--color-text-darker), var(--bg-o, 1)); }
.border-text-dark { border-color: alpha(var(--color-text-dark), var(--bg-o, 1)); }
.border-text { border-color: alpha(var(--color-text), var(--bg-o, 1)); }
.border-text-light { border-color: alpha(var(--color-text-light), var(--bg-o, 1)); }
.border-text-lighter { border-color: alpha(var(--color-text-lighter), var(--bg-o, 1)); }
.border-grey-darker { border-color: alpha(var(--color-grey-darker), var(--bg-o, 1)); }
.border-grey-dark { border-color: alpha(var(--color-grey-dark), var(--bg-o, 1)); }
.border-grey { border-color: alpha(var(--color-grey), var(--bg-o, 1)); }
.border-grey-light { border-color: alpha(var(--color-grey-light), var(--bg-o, 1)); }
.border-grey-lighter { border-color: alpha(var(--color-grey-lighter), var(--bg-o, 1)); }
.border-light-grey-darker { border-color: alpha(var(--color-light-grey-darker), var(--bg-o, 1)); }
.border-light-grey-dark { border-color: alpha(var(--color-light-grey-dark), var(--bg-o, 1)); }
.border-light-grey { border-color: alpha(var(--color-light-grey), var(--bg-o, 1)); }
.border-light-grey-light { border-color: alpha(var(--color-light-grey-light), var(--bg-o, 1)); }
.border-light-grey-lighter { border-color: alpha(var(--color-light-grey-lighter), var(--bg-o, 1)); }
.border-dark-green-darker { border-color: alpha(var(--color-dark-green-darker), var(--bg-o, 1)); }
.border-dark-green-dark { border-color: alpha(var(--color-dark-green-dark), var(--bg-o, 1)); }
.border-dark-green { border-color: alpha(var(--color-dark-green), var(--bg-o, 1)); }
.border-dark-green-light { border-color: alpha(var(--color-dark-green-light), var(--bg-o, 1)); }
.border-dark-green-lighter { border-color: alpha(var(--color-dark-green-lighter), var(--bg-o, 1)); }
.border-light-blue-darker { border-color: alpha(var(--color-light-blue-darker), var(--bg-o, 1)); }
.border-light-blue-dark { border-color: alpha(var(--color-light-blue-dark), var(--bg-o, 1)); }
.border-light-blue { border-color: alpha(var(--color-light-blue), var(--bg-o, 1)); }
.border-light-blue-light { border-color: alpha(var(--color-light-blue-light), var(--bg-o, 1)); }
.border-light-blue-lighter { border-color: alpha(var(--color-light-blue-lighter), var(--bg-o, 1)); }
.border-light-primary-darker { border-color: alpha(var(--color-light-primary-darker), var(--bg-o, 1)); }
.border-light-primary-dark { border-color: alpha(var(--color-light-primary-dark), var(--bg-o, 1)); }
.border-light-primary { border-color: alpha(var(--color-light-primary), var(--bg-o, 1)); }
.border-light-primary-light { border-color: alpha(var(--color-light-primary-light), var(--bg-o, 1)); }
.border-light-primary-lighter { border-color: alpha(var(--color-light-primary-lighter), var(--bg-o, 1)); }
.border-dark-blue-darker { border-color: alpha(var(--color-dark-blue-darker), var(--bg-o, 1)); }
.border-dark-blue-dark { border-color: alpha(var(--color-dark-blue-dark), var(--bg-o, 1)); }
.border-dark-blue { border-color: alpha(var(--color-dark-blue), var(--bg-o, 1)); }
.border-dark-blue-light { border-color: alpha(var(--color-dark-blue-light), var(--bg-o, 1)); }
.border-dark-blue-lighter { border-color: alpha(var(--color-dark-blue-lighter), var(--bg-o, 1)); }

// --------------------------------

// (END) Global editor code

// --------------------------------